// <auto-generated />
using System;
using MSG.MedicalHistory.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSG.MedicalHistory.API.Migrations
{
    [DbContext(typeof(MedicalHistoryDbContext))]
    [Migration("20250324140601_03242025-medical")]
    partial class _03242025medical
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MCG.MedicalHisotry.API.Models.Domain.PatientMedicalHistory", b =>
                {
                    b.Property<int>("MedicalHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalHistoryID"));

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicalHistoryID");

                    b.ToTable("PatientMedicalHistory");

                    b.HasData(
                        new
                        {
                            MedicalHistoryID = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Diagnosis = "this patient has the flu.",
                            DoctorId = 1,
                            Notes = "we will check on them later",
                            PatientID = 1000,
                            Treatment = "Gave them antibiotics",
                            VisitDate = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MedicalHistoryID = 2,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Diagnosis = "Patient Has a rash on his feet, red spots.",
                            DoctorId = 1,
                            Notes = "we will check on them later",
                            PatientID = 1000,
                            Treatment = "Gave them antibiotics",
                            VisitDate = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("MSG.MedicalHistory.API.Models.Domain.MCGDoctorsList", b =>
                {
                    b.Property<int>("DoctorsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorsID"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorsID");

                    b.ToTable("MCGDoctorsList");

                    b.HasData(
                        new
                        {
                            DoctorsID = 1,
                            CreatedBy = 1,
                            DateCreated = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DoctorsName = "Xlander, Xandr"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
